# https://towardsdatascience.com/a-complete-guide-to-building-a-docker-image-serving-a-machine-learning-system-in-production-d8b5b0533bde
ARG CUDA_VERSION=11.8.0
ARG UBUNTU_VERSION=22.04

# https://gitlab.com/nvidia/container-images/cuda/blob/master/doc/supported-tags.md
FROM nvidia/cuda:${CUDA_VERSION}-cudnn8-runtime-ubuntu${UBUNTU_VERSION}

ARG PYTHON_VERSION=3.9
ARG POETRY_VERSION=1.3.1
# ARG SPACY_MODEL=en_core_web_lg

ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PY="python${PYTHON_VERSION}"

WORKDIR /dependencies

RUN apt update \
    && apt install -y curl build-essential software-properties-common \
    && add-apt-repository -y ppa:deadsnakes/ppa \
    && apt install -y ${PY}-dev ${PY}-venv \
    && apt clean \
    && rm -rf /var/lib/apt/lists*

ENV PATH="/root/.local/bin:${PATH}"
RUN curl -sSL https://install.python-poetry.org | ${PY} - \
    && poetry config virtualenvs.in-project true \
    && poetry env use ${PY}

COPY poetry.lock* pyproject.toml ./
RUN poetry install --no-interaction --no-ansi --extras server

ENV VIRTUAL_ENV="/dependencies/.venv"
ENV PATH="${VIRTUAL_ENV}/bin:${PATH}"
WORKDIR /app

# RUN python -m spacy download ${SPACY_MODEL}

COPY . .

CMD ["python", "-m", "nlp_service", "0.0.0.0:50051"]
